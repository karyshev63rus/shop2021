version: "3.7"

services:
  web:
    build:
      context: .
    image: web-image
    container_name: web
    hostname: web
    restart: on-failure
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    command: >
      bash -c "python /code/manage.py migrate &&
             python /code/manage.py runserver 0.0.0.0:8000"
    stdin_open: true
    tty: true
    depends_on:
      - db
      - rabbit
    networks:
      - shared_network

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - "5682:5672"
      - "15682:15672"
    networks:
      - shared_network

  worker:
    image: web-image
    restart: on-failure
    command: >
      bash -c "wait-for web:8000 && celery -A config worker -l info"
    depends_on:
      - web
      - rabbit
      - db
    networks:
      - shared_network

  db:
    build: postgres/
    container_name: db
    hostname: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - "5432:5432"
    networks:
      - shared_network

volumes:
  postgres_data:

networks:
  shared_network:
    driver: bridge
